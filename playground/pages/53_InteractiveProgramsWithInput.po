#
msgid ""
msgstr ""

msgid "pages.InteractiveProgramsWithInput.steps.first_input.text"
msgstr ""
"Programy, które do tej pory napisaliśmy, nie są interaktywne.\n"
"Aby nasza interaktywna gra w kółko i krzyżyk była możliwa, będziemy potrzebować metody odbierania wprowadzeń od graczy.\n"
"Python pozwala nam na to za pomocą wbudowanej funkcji `input`. Uruchom ten program:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"Gdy `name = input()` zostanie wykonane, program faktycznie zatrzymuje się i czeka, aż coś wpiszesz w konsoli i naciśniesz Enter,\n"
"więc musisz to zrobić, aby program został zakończony."

msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.text"
msgstr ""
"To, co wpisałeś (nie uwzględniając naciśnięcia Enter na końcu), jest zwracane przez funkcję `input()` jako łańcuch znaków.\n"
"\n"
"Istotne jest, aby zrozumieć, że `input()` ***zawsze zwraca łańcuch znaków***, bez względu na to, co użytkownik wpisał.\n"
"To Ty decydujesz o konwersji tego łańcucha na typ danych, który jest potrzebny.\n"
"Zapominanie o tym szczególe jest częstym źródłem mylących błędów.\n"
"\n"
"Na przykład, ten program na pierwszy rzut oka wygląda dobrze, ale jeśli go wypróbujesz, zobaczysz, że tak naprawdę nie działa:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"Napraw program, aby kiedy użytkownik wpisze wartość `super_secret_number` (`7` w tym przykładzie),\n"
"program wyświetlił `Amazing! Are you psychic?` jak oczekiwano.\n"
"Powinno to działać, kiedy `super_secret_number` jest dowolną liczbą całkowitą (`int`)."

msgid "pages.InteractiveProgramsWithInput.steps.final_text.text"
msgstr ""
"Doskonale!\n"
"\n"
"Istnieją dwa główne sposoby naprawienia tego problemu. Możesz konwertować wprowadzone dane na liczbę:\n"
"\n"
"__code0__\n"
"\n"
"albo przekonwertować poprawną odpowiedź na łańcuch znaków:\n"
"\n"
"__code1__\n"
"\n"
"Ważną różnicą między tymi dwiema metodami jest to, że pierwsze podejście spowoduje wystąpienie błędu,\n"
"jeśli użytkownik wpisze coś, co nie jest liczbą, co może być albo nie być tym, czego chcesz."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.0.text"
msgstr "`input()` always returns a string."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.1.text"
msgstr "A string that looks like a number is still a string, not a number."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.2.text"
msgstr "In `super_secret_number = 7`, `7` is a number, not a string."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.3.text"
msgstr "That makes `super_secret_number` also a number."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.4.text"
msgstr "A string cannot equal a number."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.5.text"
msgstr ""
"To check that two values are equal, make sure they're the same type first."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.6.text"
msgstr ""
"So to compare a number and a string, first convert the number to a string or"
" convert the string to a number."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.7.text"
msgstr ""
"You learned how to convert between strings and numbers in the previous page."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.8.text"
msgstr ""
"Use `int()` to convert to an integer (whole number) or `str()` to convert to"
" a string."

msgid "pages.InteractiveProgramsWithInput.title"
msgstr "Interactive Programs with `input()`"
