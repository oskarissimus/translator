#
msgid ""
msgstr ""

msgid "pages.OtherComparisonOperators.steps.try_not_equals.text"
msgstr ""
"The opposite of the equals operator `==` is the *not equals* operator `!=`. "
"If you squint it sort of looks like ≠. It evaluates to `True` when two "
"values are...not equal. Try `__program__` for yourself in the shell."

msgid "pages.OtherComparisonOperators.steps.brokn_kyboard.text"
msgstr ""
"Here's a cute little program using `!=`:\n"
"\n"
"    __copyable__\n"
"__code0__"

msgid "pages.OtherComparisonOperators.steps.introducing_less_than.text"
msgstr ""
"Other handy operators are `<` (less than) and `>` (greater than). For "
"example, `a < b` means \"`a` is less than `b`\". Try using one of these in "
"the shell to compare two numbers."

msgid "pages.OtherComparisonOperators.steps.comparing_strings.text"
msgstr ""
"You can also use these operators to compare strings. If you arrange two "
"strings in alphabetical order, the first one is 'less than' the second. See "
"for yourself."

msgid "pages.OtherComparisonOperators.steps.grades_example.text"
msgstr ""
"Here's a practical example of `<` in action for you to try:\n"
"\n"
"__program_indented__\n"
"\n"
"Recall that `elif percentage < 60` after `if percentage < 40` means \"if the percentage wasn't less than 40 and also is less than 60\", so it will pass for all numbers from 40 to 59 inclusive. Similarly a 'B' is for percentages from 60 to 79, and an 'A' is for any number 80 and up."

msgid "pages.OtherComparisonOperators.steps.min_three_exercise.text"
msgstr ""
"Now for an exercise: write a program that takes three variables `x1`, `x2`, and `x3`, and prints the value of the smallest one. So for:\n"
"\n"
"__code0__\n"
"\n"
"it should print `10`."

msgid "pages.OtherComparisonOperators.steps.final_text.text"
msgstr ""
"Marvelous!\n"
"\n"
"There are many ways this could be solved. Here's one solution:\n"
"\n"
"__code0__\n"
"\n"
"Here's another:\n"
"\n"
"__code1__\n"
"\n"
"These programs (and yours too) all work equally well with numbers and strings. So for:\n"
"\n"
"__code2__\n"
"\n"
"they will print `Alice` because that's the first string alphabetically.\n"
"\n"
"`<` and `>` evaluate to False if the compared values are equal. For example,\n"
"3 is not less than 3, so `3 < 3` and `3 > 3` are both False.\n"
"To allow equal values, use `<=` and `>=`.\n"
"Again, if you squint, they look a bit like ≤ and ≥.\n"
"Note that the `=` comes second - there are no such operators as `=<` or `=>`.\n"
"To remember this, read them out loud as \"less than or equal to\"\n"
"and \"greater than or equal to\".\n"
"\n"
"In summary, the main comparison operators are `==`, `!=`, `<`, `>`, `<=`, and `>=`.\n"
"If you ever have doubts about what they do, play with them in the shell!"

msgid "pages.OtherComparisonOperators.steps.min_three_exercise.hints.0.text"
msgstr ""
"Try writing a program which prints the smallest of just `x1` and `x2`."

msgid "pages.OtherComparisonOperators.steps.min_three_exercise.hints.1.text"
msgstr "All you need is a few uses of `<`, `if`, and maybe `else`."

msgid "pages.OtherComparisonOperators.title"
msgstr "Other Comparison Operators"

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.0.text"
msgstr ""
"This is almost exactly the same as the previous step, just use strings "
"instead of numbers."

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.1.text"
msgstr "You only need to run one very small, simple line in the shell."

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.2.text"
msgstr ""
"You can also do this by running multiple lines in the shell, first defining "
"variables and then comparing them, but you don't need to, this can be done "
"without variables."

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.3.text"
msgstr ""
"Remember adding two strings in the shell at the beginning of the course?"

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.4.text"
msgstr "For example, we did `'hello' + 'world'`"

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.5.text"
msgstr ""
"For this exercise you have to do basically that, but compare them instead."

msgid ""
"pages.OtherComparisonOperators.steps.introducing_less_than.hints.0.text"
msgstr "You only need to run one very small, simple line in the shell."

msgid ""
"pages.OtherComparisonOperators.steps.introducing_less_than.hints.1.text"
msgstr "How would you add two numbers in the shell?"

msgid ""
"pages.OtherComparisonOperators.steps.introducing_less_than.hints.2.text"
msgstr "For example, try `123 + 456`"

msgid ""
"pages.OtherComparisonOperators.steps.introducing_less_than.hints.3.text"
msgstr ""
"For this exercise you have to do basically that, but compare them instead."

msgid "pages.OtherComparisonOperators.steps.comparing_strings.requirements"
msgstr "Run any code in the shell using either `<` or `>` on two strings."

msgid ""
"pages.OtherComparisonOperators.steps.introducing_less_than.requirements"
msgstr "Run any code in the shell using either `<` or `>` on two numbers."
