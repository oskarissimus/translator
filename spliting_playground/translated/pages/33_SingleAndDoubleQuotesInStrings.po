#
msgid ""
msgstr ""

msgid ""
"pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise.hints.0.text"
msgstr "How should you define the string?"

msgid ""
"pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise.hints.1.text"
msgstr "With single quotes, or with double quotes?"

msgid ""
"pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise.hints.2.text"
msgstr "You only need one string."

msgid ""
"pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise.hints.3.text"
msgstr "No need to add strings together."

msgid "pages.SingleAndDoubleQuotesInStrings.steps.double_quote_exercise.text"
msgstr ""
"As you can see Python considers the same string defined by single or double quotes as the same.\n"
"\n"
"Now write a program that prints the following text from the Zen of Python:\n"
"\n"
"    __copyable__\n"
"    Special cases aren't special enough to break the rules.\n"
"\n"
"The program should be a single line using `print()`, no variables."

msgid "pages.SingleAndDoubleQuotesInStrings.steps.double_quotes.text"
msgstr ""
"So we can't use an apostrophe as we like in a string with single quotes.\n"
"The apostrophe counts as a single quote and therefore acts as a *closing quote* of a string definition `'Alice'`.\n"
"Then the remaining text `s Diner'` is invalid syntax and Python does not understand it.\n"
"\n"
"Thankfully Python allows us to define strings in another way, using double quotes `\"` instead:\n"
"\n"
"__program_indented__"

msgid "pages.SingleAndDoubleQuotesInStrings.steps.final_text.text"
msgstr ""
"Good job!\n"
"\n"
"In most cases you can use either single or double quotes to define your strings, however you like it.\n"
"But if your string contains `'` then use `\"` to define it and vice versa."

msgid ""
"pages.SingleAndDoubleQuotesInStrings.steps.single_double_quotes_equal.text"
msgstr ""
"Remember that quotes are just part of the human notation for strings.\n"
"They are not stored as an actual part of the string.\n"
"Try this in the shell:\n"
"\n"
"__program_indented__"

msgid ""
"pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise.hints.0.text"
msgstr "Think simple! How would you normally do this?"

msgid ""
"pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise.hints.1.text"
msgstr ""
"If a string contains a single quote, we must use double quotes to define it."

msgid ""
"pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise.hints.2.text"
msgstr "What if the string contains double quotes?"

msgid "pages.SingleAndDoubleQuotesInStrings.steps.single_quote_exercise.text"
msgstr ""
"Excellent!\n"
"\n"
"Now print the following quote exactly (including the double quotes):\n"
"\n"
"    __copyable__\n"
"    \"Talk is cheap. Show me the code.\" - Linus Torvalds\n"
"\n"
"The program should be a single line using `print()`, no variables."

msgid ""
"pages.SingleAndDoubleQuotesInStrings.steps.single_quotes_apostrophe.program"
msgstr "print('Alice's Diner')"

msgid ""
"pages.SingleAndDoubleQuotesInStrings.steps.single_quotes_apostrophe.text"
msgstr ""
"We have been defining strings using single quotes up until now, like:\n"
"\n"
"__code0__\n"
"\n"
"What happens if we want to define a string that contains an apostrophe? Try this:\n"
"\n"
"__program_indented__"

msgid "pages.SingleAndDoubleQuotesInStrings.title"
msgstr "Single and Double Quotes in Strings"
