#
msgid ""
msgstr ""

msgid "pages.BuildingNewLists.steps.double_numbers.hints.0.text"
msgstr "Pamiętaj, że możesz mnożyć liczby używając `*`."

msgid "pages.BuildingNewLists.steps.double_numbers.hints.1.text"
msgstr ""
"Ten program jest strukturalnie bardzo podobny do programów, które pisałeś, "
"budując łańcuchy znaków znak po znaku."

msgid "pages.BuildingNewLists.steps.double_numbers.hints.2.text"
msgstr ""
"Utwórz nową listę, a następnie zbuduj ją element po elemencie w pętli for."

msgid "pages.BuildingNewLists.steps.double_numbers.hints.3.text"
msgstr "Zacznij od pustej listy."

msgid "pages.BuildingNewLists.steps.double_numbers.hints.4.text"
msgstr "Możesz utworzyć listę z jednym elementem `x`, po prostu pisząc `[x]`."

msgid "pages.BuildingNewLists.steps.double_numbers.hints.5.text"
msgstr ""
"Możesz dodać element do listy, dodając listę zawierającą jeden element."

msgid "pages.BuildingNewLists.steps.double_numbers.text"
msgstr ""
"Listy i łańcuchy znaków mają wiele wspólnego.\n"
"Na przykład, możesz dodać dwie listy, aby połączyć je w nową listę.\n"
"Możesz także utworzyć pustą listę, która nie ma żadnych elementów.\n"
"Sprawdź to sam:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"Z tą wiedzą, napisz program, który bierze listę liczb\n"
"i wyświetla listę, na której każda liczba została podwojona. Na przykład, mając:\n"
"\n"
"__code1__\n"
"\n"
"wydrukowałby:\n"
"\n"
"__code2__"

msgid "pages.BuildingNewLists.steps.filter_numbers.disallowed.0.message"
msgstr ""
"Brawo, to jest poprawne! Jednak powinieneś użyć `.append()` zamiast `+=`."

msgid "pages.BuildingNewLists.steps.filter_numbers.hints.0.text"
msgstr "To jest bardzo podobne do poprzedniego ćwiczenia."

msgid "pages.BuildingNewLists.steps.filter_numbers.hints.1.text"
msgstr ""
"Różnica polega na tym, że czasami powinieneś pominąć dodawanie do nowej "
"listy."

msgid "pages.BuildingNewLists.steps.filter_numbers.hints.2.text"
msgstr "Użyj instrukcji `if`."

msgid "pages.BuildingNewLists.steps.filter_numbers.hints.3.text"
msgstr ""
"Użyj operatora porównania, aby przetestować, czy liczba jest wystarczająco "
"duża, aby ją dodać."

msgid "pages.BuildingNewLists.steps.filter_numbers.text"
msgstr ""
"Świetnie!\n"
"\n"
"Gdy chcesz dodać pojedynczy element na koniec listy, zamiast:\n"
"\n"
"__code0__\n"
"\n"
"częściej pisze się:\n"
"\n"
"__code1__\n"
"\n"
"Nie ma naprawdę dużej różnicy między tymi dwoma sposobami, ale `.append`\n"
"będzie bardziej znajomy i czytelny dla większości osób.\n"
"\n"
"Teraz użyj `.append`, aby napisać program, który bierze listę liczb i\n"
"wyświetla nową listę zawierającą tylko te liczby, które są większe niż 5.\n"
"\n"
"Na przykład, mając:\n"
"\n"
"__code2__\n"
"\n"
"wydrukowałby:\n"
"\n"
"__code3__"

msgid "pages.BuildingNewLists.steps.final_text.text"
msgstr "Fantastycznie! Robimy duże postępy."

msgid "pages.BuildingNewLists.title"
msgstr "Budowanie Nowych List"
