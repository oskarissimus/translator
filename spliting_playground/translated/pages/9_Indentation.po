#
msgid ""
msgstr ""

msgid "pages.Indentation.steps.missing_indentation.text"
msgstr ""
"This example loop:\n"
"\n"
"__code0__\n"
"\n"
"works, but actually it would usually (and should) be written like this:\n"
"\n"
"__code1__\n"
"\n"
"Specifically, the code to be repeated (known as the *body*) starts on a new line after the colon (`:`), and it must be *indented*, i.e. have some spaces before it. The code below without indentation is invalid, run it to see for yourself:\n"
"\n"
"__program_indented__"

msgid "pages.Indentation.steps.two_indented_lines.text"
msgstr ""
"The spaces are required to tell Python which lines of code belong to the body of the for loop. This is critical when the loop contains several lines, which it often will. For example, run this code:\n"
"\n"
"__code0__"

msgid "pages.Indentation.steps.one_indented_line.text"
msgstr ""
"There are two indented lines, so they're both part of the body, so `---` gets printed after each character. Now try running the same code without the indentation in the last line:\n"
"\n"
"__code0__"

msgid "pages.Indentation.steps.mismatched_indentations.text"
msgstr ""
"Since `print('---')` is not indented, it's not part of the loop body. This means it only runs once, after the whole loop has finished running. Both programs are valid, they just do different things.\n"
"\n"
"The program below is invalid. Both lines in the loop body are indented, but by different amounts. The first line starts with 4 spaces, the second line starts with 2. Try running it.\n"
"\n"
"__program_indented__"

msgid "pages.Indentation.steps.final_text.text"
msgstr ""
"When you indent, you should always indent by 4 spaces. Any consistent "
"indentation is actually acceptable, but 4 spaces is the convention that "
"almost everyone follows. Note that the editor generally makes this easy for "
"you. For example, if you press the 'Tab' key on your keyboard in the editor,"
" it will insert 4 spaces for you."

msgid "pages.Indentation.steps.mismatched_indentations.program"
msgstr ""
"for character in name:\n"
"    print(character)\n"
"  print('---')"

msgid "pages.Indentation.steps.missing_indentation.program"
msgstr ""
"for character in name:\n"
"print(character)"

msgid "pages.Indentation.title"
msgstr "Indentation"
