msgid "pages.IntroducingLists.steps.can_contain_anything.text"
msgstr ""
"Lista jest *sekwencją* (uporządkowanym zbiorem/kontenerem) dowolnej liczby wartości.\n"
"Wartości te często określane są jako *elementy*.\n"
"Mogą to być cokolwiek: liczby, ciągi znaków, wartości logiczne, nawet inne listy! Mogą także być mieszanką różnych typów.\n"
"\n"
"Aby bezpośrednio utworzyć listę, jak wyżej:\n"
"\n"
"1. Napisz nawiasy kwadratowe: `[]`\n"
"2. Jeśli nie chcesz mieć pustej listy, wewnątrz napisz wyrażenia, które będą elementami.\n"
"3. Umieść przecinki (`,`) pomiędzy elementami, aby je oddzielić.\n"
"\n"
"Oto inny przykład tworzenia listy:\n"
"\n"
"__program_indented__"

msgid "pages.IntroducingLists.steps.final_text.text"
msgstr ""
"Gratulacje! To było bardzo trudne! Jedno z możliwych rozwiązań wygląda tak:\n"
"\n"
"    __no_auto_translate__\n"
"    words = ['This', 'is', 'a', 'list']\n"
"    separator = ' - '\n"
"    total = ''\n"
"    not_first = False\n"
"\n"
"    for word in words:\n"
"        if not_first:\n"
"            total += separator\n"
"        total += word\n"
"        not_first = True\n"
"\n"
"    print(total)"

msgid "pages.IntroducingLists.steps.first_list.program"
msgstr ""
"words = ['This', 'is', 'a', 'list']\n"
"\n"
"for word in words:\n"
"    print(word)"

msgid "pages.IntroducingLists.steps.first_list.text"
msgstr ""
"Nadszedł czas, aby dowiedzieć się o potężnym nowym typie wartości, zwanym *listami*. Oto przykład:\n"
"\n"
"__program_indented__"

msgid "pages.IntroducingLists.steps.numbers_sum.text"
msgstr ""
"Jak widziałeś powyżej, listy są *iterowalne*, co oznacza, że możesz iterować po nich przy użyciu `pętli for`.\n"
"Oto program, który sumuje wszystkie liczby na liście:\n"
"\n"
"__program_indented__"

msgid "pages.IntroducingLists.steps.strings_sum.hints.0.text"
msgstr ""
"To jest bardzo podobne do ćwiczeń, które wykonałeś, tworząc ciągi znaków "
"znak po znaku."

msgid "pages.IntroducingLists.steps.strings_sum.hints.1.text"
msgstr "Rozwiązanie jest bardzo podobne do programu, który sumuje liczby."

msgid "pages.IntroducingLists.steps.strings_sum.hints.2.text"
msgstr ""
"Tak naprawdę, co się stanie, jeśli spróbujesz uruchomić ten program z listą "
"ciągów znaków?"

msgid "pages.IntroducingLists.steps.strings_sum.hints.3.text"
msgstr ""
"Problem polega na tym, że 0. Nie możesz dodać 0 do ciągu znaków, ponieważ "
"liczby i ciągi znaków są niekompatybilne."

msgid "pages.IntroducingLists.steps.strings_sum.hints.4.text"
msgstr ""
"Czy jest podobne pojęcie wśród ciągów znaków do 0? Pusta początkowa wartość?"

msgid "pages.IntroducingLists.steps.strings_sum.text"
msgstr ""
"Teraz zmodyfikuj program, tak aby mógł sumować listę ciągów znaków zamiast liczb.\n"
"Na przykład, mając:\n"
"\n"
"    __no_auto_translate__\n"
"    words = ['This', 'is', 'a', 'list']\n"
"\n"
"powinien wydrukować:\n"
"\n"
"    __no_auto_translate__\n"
"    Thisisalist"

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.0.text"
msgstr ""
"To jest podobne do poprzedniego ćwiczenia. Możesz zacząć od swojego "
"rozwiązania z tego."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.1.text"
msgstr ""
"To ćwiczenie nie wymaga niczego wyjątkowego, a ostateczne rozwiązanie może "
"być dość proste. Ale wymaga starannego przemyślenia podejścia."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.10.text"
msgstr ""
"Możesz napisać program, który sprawdza, czy jesteś w *pierwszej* iteracji "
"pętli."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.11.text"
msgstr ""
"Wystarczy zrobić zmienną typu bool do śledzenia tego. Nie ma potrzeby "
"używania żadnych operatorów porównania ani liczb."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.12.text"
msgstr ""
"Spojrzeliśmy na programy, które robiły coś takiego "
"[tutaj](#UnderstandingProgramsWithSnoop)."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.13.text"
msgstr ""
"Więc jeśli pominięto dodawanie separatora tylko w pierwszej iteracji, będzie"
" miał `n - 1` separatorów. Teraz wystarczy tylko przemyśleć ostrożnie, jak "
"upewnić się, że separatory są we właściwym miejscu."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.14.text"
msgstr ""
"Zapominając na chwilę o pętli, musisz dodać do ciągu znaków w tej "
"kolejności: pierwsze słowo, separator, drugie słowo, separator, trzecie "
"słowo itd."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.15.text"
msgstr ""
"To oznacza, że w pierwszej iteracji dodajesz tylko pierwsze słowo. W drugiej"
" iteracji dodajesz separator, potem drugie słowo. W trzeciej iteracji "
"dodajesz separator, potem trzecie słowo. I tak dalej."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.16.text"
msgstr "Więc w swojej pętli najpierw dodaj separator, następnie dodaj słowo."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.17.text"
msgstr ""
"Pomiń dodawanie separatora w pierwszej iteracji, sprawdzając zmienną typu "
"bool."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.18.text"
msgstr ""
"Utwórz zmienną typu bool przed pętlą, później zmień ją wewnątrz pętli."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.19.text"
msgstr ""
"Zmieniaj ją dopiero po sprawdzeniu w pętli, inaczej nie będziesz w stanie "
"pominąć pierwszej iteracji."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.2.text"
msgstr ""
"W każdej iteracji, oprócz słowa z listy, musisz również dodać separator."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.3.text"
msgstr ""
"Ale nie chcesz dodawać separatora po dodaniu ostatniego słowa na liście."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.4.text"
msgstr ""
"Niestety nie ma \"odejmowania\" w ciągach znaków; nie możesz dodać "
"ostatniego separatora, a następnie go usunąć."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.5.text"
msgstr ""
"Zróbmy krok wstecz. Ostateczny wynik powinien zawierać każde słowo i `n - 1`"
" separatorów, gdzie `n` to liczba słów."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.6.text"
msgstr "Chcesz dodać separator w każdej iteracji oprócz jednej."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.7.text"
msgstr ""
"Możesz pominąć dodawanie separatora w jednej konkretnej iteracji używając "
"instrukcji `if`."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.8.text"
msgstr ""
"Później nauczysz się sposobu iterowania po liście i sprawdzania, czy jesteś "
"w ostatniej iteracji, ale na razie nie masz możliwości tego zrobienia."

msgid "pages.IntroducingLists.steps.strings_sum_bonus.hints.9.text"
msgstr "Jednak iteracja, którą pomijasz, nie musi być ostatnia!"

msgid "pages.IntroducingLists.steps.strings_sum_bonus.text"
msgstr ""
"Wspaniale!\n"
"\n"
"Jeśli chcesz, możesz kontynuować [następnej stronie](#BuildingNewLists).\n"
"\n"
"Dla dodatkowego, opcjonalnego wyzwania: rozszerz program tak, aby dodawał łańcuch separatorów *pomiędzy* każdym słowem.\n"
"Na przykład, mając\n"
"\n"
"    __no_auto_translate__\n"
"    words = ['This', 'is', 'a', 'list']\n"
"    separator = ' - '\n"
"\n"
"wydrukowałby:\n"
"\n"
"    __no_auto_translate__\n"
"    This - is - a - list"

msgid "pages.IntroducingLists.title"
msgstr "Wprowadzenie do list"
