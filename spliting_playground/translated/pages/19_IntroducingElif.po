#
msgid ""
msgstr ""

msgid "pages.IntroducingElif.steps.dna_example.text"
msgstr ""
"Szybka lekcja biologii! Większość komórek w twoim ciele zawiera pełny kod genetyczny w DNA.\n"
"Składa się ono z nici molekularnych jednostek zwanych nukleobazami, które występują w czterech odmianach:\n"
"Adenina, Cytozyna, Guanina i Tymina, czyli skrótowo ACGT.\n"
"Część pojedynczej nici może więc wyglądać tak:\n"
"\n"
"    AGTAGCGTCCTTAGTTACAGGATGGCTTAT...\n"
"\n"
"Ta będzie sparowana z inną nicią, gdzie A jest zamienione na T i na odwrót,\n"
"a C jest zamienione na G i na odwrót, np.:\n"
"\n"
"    TCATCGCAGGAATCAATGTCCTACCGAATA...\n"
"\n"
"Dwie nici są 'zazipowane' razem w słynną podwójną helisę,\n"
"połączone przez pasujące pary A-T i C-G. Te parowania są niezbędne przy kopiowaniu DNA, gdy\n"
"komórki się dzielą i rozmnażają. Podwójna helisa jest rozpinana i kod jest przepisywany\n"
"na jego przeciwstawną wersję, aby zrobić kopię.\n"
"\n"
"Zamierzamy powtórzyć ten proces. Spróbujmy napisać taki sam rodzaj programu, co przed chwilą:\n"
"\n"
"    __copyable__\n"
"__code0__"

msgid "pages.IntroducingElif.steps.dna_example_with_elif.requirements"
msgstr ""
"Skopiuj program z pierwszego kroku na tej stronie, ale zamień 4 bloki `if` na kombinację bloków `if` i `elif` stąd.\n"
"Innymi słowy, zamień każde z ostatnich trzech `if` na `elif`, ale pozostaw pierwszy `if` bez zmian."

msgid "pages.IntroducingElif.steps.dna_example_with_elif.text"
msgstr ""
"Świetnie! Naśladowałeś to, co twoje własne komórki robią ciągle.\n"
"\n"
"`If` wewnątrz `else` może być zastąpione jednym słowem kluczowym `elif`. Na przykład,\n"
"poprzedni kod można zmienić na to:\n"
"\n"
"__code0__"

msgid "pages.IntroducingElif.steps.dna_example_with_else.hints.0.text"
msgstr ""
"Zmień:\n"
"\n"
"__code0__\n"
"\n"
"aby wyglądało jak poprawiony fragment. To tylko mała zmiana, wykonaj ją bez kopiowania i wklejania."

msgid "pages.IntroducingElif.steps.dna_example_with_else.hints.1.text"
msgstr "Teraz dokonaj tej samej zmiany w kodzie zamieniającym G i C."

msgid "pages.IntroducingElif.steps.dna_example_with_else.text"
msgstr ""
"O nie, to nie do końca działa. `T` zmienia się na `A`, ale `A` nie zmienia się na nic.\n"
"Czy widzisz dlaczego?\n"
"\n"
"Gdy `char == 'A'`, to faktycznie wykonuje się instrukcja `char = 'T'`. Ale to oznacza, że następujący\n"
"warunek `char == 'T'` także jest spełniony, więc `char = 'A'` i wracamy do punktu wyjścia.\n"
"Musimy zmienić `char` z `T` na `A` tylko wtedy, gdy `char` początkowo nie było `A`,\n"
"czyli `char == 'A'` było `Fałsz`. Możemy to zrobić za pomocą `else`, tak jak to:\n"
"\n"
"__code0__\n"
"\n"
"Teraz popraw program, aby zamieniał wszystkie znaki poprawnie."

msgid "pages.IntroducingElif.steps.final_text.text"
msgstr ""
"Często mamy do czynienia z łańcuchem klauzul `elif`, gdy chcemy, by jeden z wielu\n"
"bloków kodu się wykonał, tak jak w tym przypadku. Ogólnie kod taki jak ten:\n"
"\n"
"__code0__\n"
"\n"
"można przepisać jako:\n"
"\n"
"__code1__\n"
"\n"
"co jest krótsze i oszczędza nam skomplikowanego zagnieżdżania. Różnica jest tylko kosmetyczna:\n"
"gdy komputer wykonuje ten kod, nie potrafi odróżnić jednej wersji od drugiej.\n"
"\n"
"Zauważ, że za `elif`(ami) opcjonalnie można dodać jeden ostatni `else`. Nie umieściliśmy go\n"
"w naszym przykładzie z DNA, ale moglibyśmy dodać go, aby ostrzec nas o wszelkich nieoczekiwanych znakach\n"
"w danych wejściowych lub zmienić `elif char == 'C':` na `else:`, gdybyśmy byli pewni\n"
"że dane wejściowe są poprawne."

msgid "pages.IntroducingElif.title"
msgstr "Wprowadzenie do `elif`"
