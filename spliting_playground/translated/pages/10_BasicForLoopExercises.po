```plaintext
#
msgid ""
msgstr ""

msgid "pages.BasicForLoopExercises.steps.loop_exercise_1.text"
msgstr ""
"Czas na ćwiczenia! Zmodyfikuj ten program:\n"
"\n"
"__code0__\n"
"\n"
"aby zamiast tego wyświetlił:\n"
"\n"
"    __no_auto_translate__\n"
"    ---W\n"
"    ---o\n"
"    ---r\n"
"    ---l\n"
"    ---d"

msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.text"
msgstr ""
"Świetnie! Napisz teraz program, który wypisze `name` (imię) tyle razy, ile ma liter. Na przykład dla `name = 'Amy'`, powinien wyjść wynik:\n"
"\n"
"    __no_auto_translate__\n"
"    Amy\n"
"    Amy\n"
"    Amy\n"
"\n"
"Dla `name = 'World'` (Świat), powinien wyjść wynik:\n"
"\n"
"    __no_auto_translate__\n"
"    World\n"
"    World\n"
"    World\n"
"    World\n"
"    World\n"
"\n"
"Pamiętaj, że możesz ustawić `name` na cokolwiek w pierwszej linii. Tylko reszta programu po tym będzie sprawdzana."

msgid "pages.BasicForLoopExercises.steps.final_text.text"
msgstr ""
"Robimy naprawdę duże postępy! Rozwiązujesz problemy i piszesz nowy kod!\n"
"Załóżmy, że utrzymujemy interesujący poziom."

msgid "pages.BasicForLoopExercises.steps.loop_exercise_1.hints.0.text"
msgstr ""
"Powinieneś użyć tylko jednego `print`, ponieważ każdy print wypisuje w nowej "
"linii."

msgid "pages.BasicForLoopExercises.steps.loop_exercise_1.hints.1.text"
msgstr "Będziesz musiał użyć `+`."

msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.hints.0.text"
msgstr ""
"Na chwilę zapomnij o pętlach. Jak byś napisał program, który wypisze `name` (imię)"
" 3 razy?"

msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.hints.1.text"
msgstr ""
"Rozwiązanie wygląda bardzo podobnie do innych programów, które widzieliśmy w tej "
"sekcji."

msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.hints.2.text"
msgstr ""
"Pętla for stworzy zmienną taką jak `character`, ale program "
"nie musi jej wykorzystywać."

msgid "pages.BasicForLoopExercises.title"
msgstr "Podstawowe Ćwiczenia z Pętlą For"
```