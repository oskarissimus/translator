#
msgid ""
msgstr ""

msgid "pages.BasicForLoopExercises.steps.final_text.text"
msgstr ""
"We're making really good progress! You're solving problems and writing new code!\n"
"Let's keep making things more interesting."

msgid "pages.BasicForLoopExercises.steps.loop_exercise_1.hints.0.text"
msgstr ""
"You should only use one `print`, since each print outputs on a different "
"line."

msgid "pages.BasicForLoopExercises.steps.loop_exercise_1.hints.1.text"
msgstr "You will need to use `+`."

msgid "pages.BasicForLoopExercises.steps.loop_exercise_1.text"
msgstr ""
"Time for some exercises! Modify this program:\n"
"\n"
"__code0__\n"
"\n"
"to instead output:\n"
"\n"
"    __no_auto_translate__\n"
"    ---W\n"
"    ---o\n"
"    ---r\n"
"    ---l\n"
"    ---d"

msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.hints.0.text"
msgstr ""
"Forget loops for a moment. How would you write a program which prints `name`"
" 3 times?"

msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.hints.1.text"
msgstr ""
"The solution looks very similar to the other programs we've seen in this "
"section."

msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.hints.2.text"
msgstr ""
"The for loop will create a variable such as `character`, but the program "
"doesn't need to use it."

msgid "pages.BasicForLoopExercises.steps.loop_exercise_2.text"
msgstr ""
"Splendid! Now write a program which prints `name` once for each character in `name`. For example, for `name = 'Amy'`, it should output:\n"
"\n"
"    __no_auto_translate__\n"
"    Amy\n"
"    Amy\n"
"    Amy\n"
"\n"
"For `name = 'World'`, it should output:\n"
"\n"
"    __no_auto_translate__\n"
"    World\n"
"    World\n"
"    World\n"
"    World\n"
"    World\n"
"\n"
"By the way, you can set `name` to anything in the first line. Only the rest of the program after that will be checked."

msgid "pages.BasicForLoopExercises.title"
msgstr "Basic For Loop Exercises"
