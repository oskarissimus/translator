msgid "pages.EqualsVsIs.steps.final_text.text"
msgstr ""
"Teraz `list1 is list2` to `True`, ponieważ *jest tylko jedna lista*, i obie zmienne\n"
"`list1` i `list2` odnoszą się do tej samej listy. `list1.append(4)` dodaje do jednej listy\n"
"i wynik można zobaczyć zarówno w `print(list1)`, jak i w `print(list2)`, ponieważ obie linie\n"
"są teraz po prostu różnymi sposobami drukowania tej samej listy.\n"
"\n"
"Polecam uruchomić obie wersje z Python Tutor, aby zobaczyć, jak wizualizuje on różnicę.\n"
"W drugim przypadku obie zmienne mają strzałki wskazujące na jeden obiekt listy.\n"
"\n"
"`list2 = list1` nie tworzy wiecznego połączenia między zmiennymi. Jeśli przypiszesz nową wartość\n"
"*którejkolwiek* z zmiennych, np. `list1 = [7, 8, 9]`, druga zmienna nie będzie miała wpływu\n"
"i nadal będzie wskazywać na pierwotną listę.\n"
"\n"
"Podstawowo przypisanie takie jak:\n"
"\n"
"    list2 = <wyrażenie>\n"
"\n"
"oznacza 'spraw, by zmienna `list2` odnosiła się do tego, co ocenia `<wyrażenie>`'.\n"
"To nie robi kopii tej wartości, co pozwala na to, że obie zmienne mogą wskazywać na tę samą listę.\n"
"Ale jak już wcześniej nauczyliśmy się, `list2` nie pamięta `<wyrażenie>`, tylko wartość.\n"
"Ona nie wie o innych zmiennych.\n"
"\n"
"Możesz skopiować listę za pomocą metody `copy`:\n"
"\n"
"__code0__\n"
"\n"
"To spowoduje, że program będzie się zachowywał jak pierwsza wersja znowu.\n"
"\n"
"Jeśli napotkasz taki rodzaj problemu i nadal będziesz mieć trudności z zrozumieniem tych spraw, przeczytaj esej [Fakty i mity na temat nazw i wartości w Pythonie](https://nedbatchelder.com/text/names.html)."

msgid "pages.EqualsVsIs.steps.same_list.requirements"
msgstr ""
"Uruchom ten sam program co powyżej, ale zastąp *drugie* `[1, 2, 3]` przez "
"`list1`."

msgid "pages.EqualsVsIs.steps.same_list.text"
msgstr ""
"Ten program jest dość prosty i w większości składa się z rzeczy, które już znasz.\n"
"Tworzymy dwie zmienne, które odnoszą się do list.\n"
"Listy mają te same elementy, więc są one równe: `list1 == list2` to `True`.\n"
"\n"
"Ale jest tu nowy operator porównania: `is`. Tutaj `list1 is list2` to `False`.\n"
"Oznacza to, że mimo że dwie listy są równe,\n"
"są to nadal dwie oddzielne, odrębne, indywidualne listy.\n"
"W rezultacie, gdy dodajesz 4 do `list1`, zmienia się tylko `list1`.\n"
"\n"
"Teraz zmień `list2 = [1, 2, 3]` na `list2 = list1` i zobacz, jakie to robi różnice."

msgid "pages.EqualsVsIs.steps.two_separate_lists.text"
msgstr ""
"Nadszedł czas, aby nauczyć się niektórych szczegółów technicznych, które są często źle rozumiane i prowadzą do błędów.\n"
"Uruchom ten program:\n"
"\n"
"    __copyable__\n"
"__code0__"

msgid "pages.EqualsVsIs.title"
msgstr "`==` kontra `is` i posiadanie wielu nazw dla jednej wartości"
