msgid "pages.FunctionsAndMethodsForLists.steps.append_vs_concatenate.text"
msgstr ""
"Przyjrzyjmy się, jak pracować z listami. Załóżmy, że mamy listę `nums = [1, 2, 3]`. Możemy użyć:\n"
"\n"
"- **`append`**: Dodaje element na końcu listy. `nums.append(4)` zmienia listę na `[1, 2, 3, 4]`.\n"
"- **`len`**: Zwraca liczbę elementów. `len(nums)` wynosi `3`.\n"
"- **`range`**: `range(n)` to obiekt podobny do listy liczb od `0` do `n - 1`. Oznacza to, że zawiera `n` liczb. W szczególności, `range(len(nums))` jest jak `[0, 1, 2]`, które są indeksami każdego elementu w `nums`.\n"
"- **`[]` (indeksowanie/subskrypcja)**: Pobiera wartość o danym indeksie. `nums[0]` to `1`, `nums[1]` to `2`, `nums[2]` to `3`.\n"
"- **`+`**: Concatenacja list. `nums + [4, 5]` to `[1, 2, 3, 4, 5]`.\n"
"\n"
"Zauważ, że `nums.append(4)` modyfikuje istniejącą listę `nums`, podczas gdy `nums + [4, 5]` tego nie robi.\n"
"Aby zachować wartość `nums + [4, 5]`, można ją przypisać do *nowej zmiennej*.\n"
"Uruchom następujący kod:\n"
"\n"
"    __copyable__\n"
"__code0__"

msgid "pages.FunctionsAndMethodsForLists.steps.final_text.text"
msgstr "Świetna robota!"

msgid "pages.FunctionsAndMethodsForLists.steps.index_predict_exercise.text"
msgstr ""
"**`index`**: Zwraca pierwszy indeks wartości na liście za pomocą składni\n"
"\n"
"__code0__\n"
"\n"
"Powoduje błąd, jeśli wartość nie znajduje się tam. Na przykład uruchom tę linię w konsoli:\n"
"\n"
"__program_indented__"

msgid ""
"pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.hints.0.text"
msgstr ""
"Twoje rozwiązanie powinno mieć dokładnie trzy instrukcje: `x = ['a', 'b', "
"'c']`, `y = ` po której następuje jedna linia dokładnie skopiowana z listy, "
"oraz `print(y)`."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.hints.1.text"
msgstr "Które linie kodu tworzą nową listę zamiast modyfikować?"

msgid ""
"pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.hints.2.text"
msgstr "`x` to lista. Każdy element `x` to łańcuch znaków."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.hints.3.text"
msgstr ""
"Możesz dodawać listy do siebie, możesz dodawać łańcuchy znaków do siebie, "
"ale nie możesz dodawać łańcucha znaków do listy."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.hints.4.text"
msgstr "Jak zrobić listę zawierającą jeden element?"

msgid ""
"pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.requirements"
msgstr ""
"Skopiuj trzy powyższe linie, a następnie zastąp "
"`(wstaw_jedną_linię_z_powyżej)` dokładnie jedną linią z długiej listy linii "
"wcześniejszych. Musisz wybrać poprawną linię, jest tylko jedna właściwa "
"odpowiedź. Wpisz linię dokładnie. Nie zastępuj części `y = `, powinna być "
"tam przed linią, którą wpiszesz, w tej samej linii."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.negative_index_concatenation_exercise.text"
msgstr ""
"Świetnie!\n"
"\n"
"Możesz zdać sobie sprawę, że praca z ostatnim elementem za pomocą `x[len(x) - 1]` jest nieco kłopotliwa.\n"
"To samo można osiągnąć przez `x[-1]`.\n"
"Podobnie, przedostatni element `x[len(x) - 2]` można zapisać jako `x[-2]`, i tak dalej.\n"
"Python pozwala nam także liczyć indeks do tyłu, zaczynając od ostatniego elementu z `-1`:\n"
"\n"
"| Indeks     | Pierwszy elt. | Drugi elt.   | Trzeci elt.  | ... | Przedostatni elt. | Ostatni elt.  |\n"
"|-----------|---------------|--------------|--------------|-----|-------------------|---------------|\n"
"| Do przodu  | `0`           | `1`          | `2`          | ... | `len(x) - 2`      |`len(x) - 1`   |\n"
"| Do tyłu    | `-len(x)`     |`-len(x) + 1` |`-len(x) + 2` | ... | `-2`              |  `-1`         |\n"
"\n"
"Następne ćwiczenie:\n"
"\n"
"Tym razem, zamiast modyfikować listę `x`, utworzysz nową listę `y`:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"`y` powinno być takie samo jak `x`, ale powinno mieć też pierwszy element powtórzony na końcu.\n"
"Dlatego program wydrukuje `['a', 'b', 'c', 'a']`."

msgid "pages.FunctionsAndMethodsForLists.steps.pop_predict_exercise.text"
msgstr ""
"**`pop`**: Usuwa i zwraca element o danym *indeksie* używając składni\n"
"\n"
"__code0__\n"
"\n"
"Bez argumentu, tzn. po prostu `some_list.pop()`, usunie i zwróci ostatni element.\n"
"Powoduje błąd, jeśli `index` nie jest prawidłowym indeksem `some_list`. Na przykład uruchom ten program:\n"
"\n"
"__program_indented__"

msgid ""
"pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.0.text"
msgstr ""
"Twoje rozwiązanie powinno mieć dokładnie trzy instrukcje: `x = ['a', 'b', "
"'c']`, jedna linia dokładnie skopiowana z listy (bez dodatków), oraz "
"`print(x)`."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.1.text"
msgstr "Przesunięcie pierwszego elementu na koniec wymaga dwóch rzeczy."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.2.text"
msgstr "Usunięcie pierwszego elementu..."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.3.text"
msgstr "i dodanie go na koniec."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.4.text"
msgstr "Które funkcje/metody możesz użyć do tego?"

msgid ""
"pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.hints.5.text"
msgstr "Pamiętaj, że pierwszy indeks to 0."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.requirements"
msgstr ""
"Skopiuj trzy powyższe linie, a następnie zastąp "
"`(wstaw_jedną_linię_z_powyżej)` dokładnie jedną linią z długiej listy tuż "
"przed tym. Musisz wybrać poprawną linię, jest tylko jedna właściwa "
"odpowiedź. Wpisz linię dokładnie."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.pop_remove_index_subscript_assignment.text"
msgstr ""
"Teraz rozwiążesz cztery krótkie ćwiczenia związane z tymi pojęciami.\n"
"Poniżej znajduje się lista poprawnych i niepoprawnych linii kodu wymieszanych ze sobą.\n"
"Każde nadchodzące ćwiczenie ma rozwiązanie, które zawiera dokładnie jedną z poniższych linii,\n"
"a ty musisz znaleźć poprawną linię z listy.\n"
"\n"
"__code0__\n"
"\n"
"Oto niekompletny program:\n"
"\n"
"    __copyable__\n"
"__code1__\n"
"\n"
"Zastąp środkową linię jedną linią z powyższej listy. Ostateczny program powinien zmodyfikować `x` tak, aby przenieść pierwszy element na koniec, tak aby drukował `['b', 'c', 'a']`."

msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.0.text"
msgstr ""
"Twoje rozwiązanie powinno mieć dokładnie trzy instrukcje: `x = [1, 2, 0, "
"3]`, jedna linia dokładnie skopiowana z listy (bez dodatków), oraz "
"`print(x)`."

msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.1.text"
msgstr "Co robi `x.remove(0)`?"

msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.2.text"
msgstr "Usuwa element!"

msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.3.text"
msgstr "Która funkcja/metoda może także usunąć element?"

msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.4.text"
msgstr ""
"Inna funkcja/metoda nie może po prostu dostać informacji 'usuń 0', "
"potrzebuje innego rodzaju informacji."

msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.5.text"
msgstr "Dokładniej, musi wiedzieć, gdzie jest 0."

msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.hints.6.text"
msgstr "Która funkcja/metoda dostarcza tego rodzaju informacji?"

msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.requirements"
msgstr ""
"Skopiuj trzy powyższe linie, a następnie zastąp `x.remove(0)` dokładnie "
"jedną linią z długiej listy linii wcześniejszych. Linia, którą wybierzesz, "
"powinna mieć ten sam efekt co `x.remove(0)`, tak żeby program wydrukował "
"`[1, 2, 3]`."

msgid "pages.FunctionsAndMethodsForLists.steps.remove_exercise.text"
msgstr ""
"Świetna robota. Teraz ostatnie ćwiczenie:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"Zastąp środkową linię `x.remove(0)` jedną linią z listy, która robi to samo."

msgid "pages.FunctionsAndMethodsForLists.steps.remove_predict_exercise.text"
msgstr ""
"**`remove`**: Usuwa pierwsze wystąpienie podanej *wartości* za pomocą składni\n"
"\n"
"__code0__\n"
"\n"
"Powoduje błąd, jeśli wartość nie znajduje się na liście. Na przykład uruchom ten program:\n"
"\n"
"__program_indented__"

msgid ""
"pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.hints.0.text"
msgstr ""
"Twoje rozwiązanie powinno mieć dokładnie trzy instrukcje: `x = ['a', 'b', "
"'c']`, jedna linia dokładnie skopiowana z listy (bez dodatków), oraz "
"`print(x)`."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.hints.1.text"
msgstr "Musisz pobrać wartość pierwszego elementu w `x`..."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.hints.2.text"
msgstr "i przypisać tę wartość do ostatniej pozycji w `x`."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.hints.3.text"
msgstr "Jak przypisujesz wartość na konkretnym indeksie na liście?"

msgid ""
"pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.hints.4.text"
msgstr "Jakie są indeksy pierwszego i ostatniego elementu w `x`?"

msgid ""
"pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.requirements"
msgstr ""
"Skopiuj trzy powyższe linie, a następnie zastąp "
"`(wstaw_jedną_linię_z_powyżej)` dokładnie jedną linią z poprzedniej długiej "
"listy. Musisz wybrać poprawną linię, jest tylko jedna właściwa odpowiedź. "
"Wpisz linię dokładnie."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.subscript_assignment_exercise.text"
msgstr ""
"Dobra robota. W kolejnym ćwiczeniu, zacznij od tego samego niekompletnego programu:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"Wybierz linię kodu z listy, która nadpisuje ostatni element `x` pierwszym elementem,\n"
"tak aby drukowało `['a', 'b', 'a']`."

msgid ""
"pages.FunctionsAndMethodsForLists.steps.subscript_assignment_predict.text"
msgstr ""
"Jak widać, `+` nie modyfikuje `nums`, ale `append` tak.\n"
"\n"
"Oto kilka nowych rzeczy.\n"
"\n"
"**`przypisanie subskrypcji`**: Ustawia wartość o danym indeksie (zastępując wartość, która była tam wcześniej) za pomocą składni\n"
"\n"
"__code0__\n"
"\n"
"Powoduje błąd, jeśli `index` nie jest prawidłowym indeksem `some_list`. Na przykład uruchom ten program:\n"
"\n"
"__program_indented__"

msgid "pages.FunctionsAndMethodsForLists.title"
msgstr "Funkcje i metody dla list"
