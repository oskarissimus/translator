#
msgid ""
msgstr ""

msgid "pages.OtherComparisonOperators.steps.try_not_equals.text"
msgstr ""
"Przeciwieństwem operatora równości `==` jest operator *nierówności* `!=`. "
"Jeśli się przyjrzeć, to trochę przypomina ≠. Zwraca `True`, kiedy dwie "
"wartości są... nie równe. Wypróbuj `__program__` samodzielnie w powłoce (shell)."

msgid "pages.OtherComparisonOperators.steps.brokn_kyboard.text"
msgstr ""
"Oto uroczy mały programik używający `!=`:\n"
"\n"
"    __copyable__\n"
"__code0__"

msgid "pages.OtherComparisonOperators.steps.introducing_less_than.text"
msgstr ""
"Innymi przydatnymi operatorami są `<` (mniejsze niż) oraz `>` (większe niż). Na "
"przykład `a < b` oznacza \"`a` jest mniejsze od `b`\". Wypróbuj użycie jednego "
"z nich w powłoce, aby porównać dwie liczby."

msgid "pages.OtherComparisonOperators.steps.comparing_strings.text"
msgstr ""
"Można także używać tych operatorów do porównywania ciągów znaków. Jeśli ustawisz dwa "
"ciągi znaków w kolejności alfabetycznej, pierwszy jest 'mniejszy niż' drugi. "
"Sprawdź to sam."

msgid "pages.OtherComparisonOperators.steps.grades_example.text"
msgstr ""
"Oto praktyczny przykład użycia `<`:\n"
"\n"
"__program_indented__\n"
"\n"
"Pamiętaj, że `elif percentage < 60` po `if percentage < 40` oznacza \"jeśli "
"procent nie był mniejszy niż 40 oraz równocześnie jest mniejszy niż 60\", więc "
"zostanie spełnione dla wszystkich liczb od 40 do 59 włącznie. Podobnie ocena 'B' "
"jest dla procentów od 60 do 79, a ocena 'A' jest dla każdej liczby 80 i więcej."

msgid "pages.OtherComparisonOperators.steps.min_three_exercise.text"
msgstr ""
"Teraz zadanie: napisz program, który bierze trzy zmienne `x1`, `x2` i `x3`, oraz "
"drukuje wartość najmniejszej z nich. Więc dla:\n"
"\n"
"__code0__\n"
"\n"
"powinien wydrukować `10`."

msgid "pages.OtherComparisonOperators.steps.final_text.text"
msgstr ""
"Wspaniale!\n"
"\n"
"Istnieje wiele sposobów rozwiązania tego problemu. Oto jedno z rozwiązań:\n"
"\n"
"__code0__\n"
"\n"
"Oto inne:\n"
"\n"
"__code1__\n"
"\n"
"Te programy (i twój również) działają równie dobrze zarówno z liczbami, jak i ciągami znaków. Więc dla:\n"
"\n"
"__code2__\n"
"\n"
"wydrukują `Alice`, ponieważ to jest pierwszy ciąg znaków w kolejności alfabetycznej.\n"
"\n"
"`<` oraz `>` dają wynik False, gdy porównywane wartości są równe. Na przykład, "
"3 nie jest mniejsze od 3, więc `3 < 3` oraz `3 > 3` są oba False.\n"
"Aby uwzględnić równe wartości, użyj `<=` oraz `>=`.\n"
"Jeśli się przyjrzeć, przypominają one trochę ≤ oraz ≥.\n"
"Zauważ, że `=` znajduje się na końcu - nie istnieją takie operatory jak `=<` czy `=>`.\n"
"Aby to zapamiętać, przeczytaj je na głos jako \"mniejsze równa się\"\n"
"i \"większe równa się\".\n"
"\n"
"Podsumowując, główne operatory porównania to `==`, `!=`, `<`, `>`, `<=` oraz `>=`.\n"
"Jeśli masz kiedykolwiek wątpliwości co do tego, co one robią, pobaw się nimi w powłoce!"

msgid "pages.OtherComparisonOperators.steps.min_three_exercise.hints.0.text"
msgstr ""
"Spróbuj napisać program, który wypisze najmniejszą z wartości `x1` i `x2`."

msgid "pages.OtherComparisonOperators.steps.min_three_exercise.hints.1.text"
msgstr "Potrzebujesz tylko kilku użycia `<`, `if`, a może `else`."

msgid "pages.OtherComparisonOperators.title"
msgstr "Inne operatory porównania"

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.0.text"
msgstr ""
"To prawie dokładnie to samo co w poprzednim kroku, tyle że użyj ciągów znaków "
"zamiast liczb."

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.1.text"
msgstr "Musisz tylko uruchomić jedną bardzo małą, prostą linię w powłoce."

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.2.text"
msgstr ""
"Możesz to również zrobić poprzez uruchomienie wielu linii w powłoce, najpierw "
"definiując zmienne a następnie porównując je, ale nie musisz tego robić, możesz "
"to zrobić bez zmiennych."

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.3.text"
msgstr ""
"Pamiętasz dodawanie dwóch ciągów znaków w powłoce na początku kursu?"

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.4.text"
msgstr "Na przykład robiliśmy `'hello' + 'world'`"

msgid "pages.OtherComparisonOperators.steps.comparing_strings.hints.5.text"
msgstr ""
"Do tego zadania musisz zrobić właściwie to samo, ale zamiast dodawać, porównuj je."

msgid ""
"pages.OtherComparisonOperators.steps.introducing_less_than.hints.0.text"
msgstr "Musisz tylko uruchomić jedną bardzo małą, prostą linię w powłoce."

msgid ""
"pages.OtherComparisonOperators.steps.introducing_less_than.hints.1.text"
msgstr "Jak byś dodał dwie liczby w powłoce?"

msgid ""
"pages.OtherComparisonOperators.steps.introducing_less_than.hints.2.text"
msgstr "Na przykład spróbuj `123 + 456`"

msgid ""
"pages.OtherComparisonOperators.steps.introducing_less_than.hints.3.text"
msgstr ""
"Do tego zadania musisz zrobić właściwie to samo, ale zamiast dodawać, porównuj je."

msgid "pages.OtherComparisonOperators.steps.comparing_strings.requirements"
msgstr "Uruchom dowolny kod w powłoce używający albo `<` albo `>` na dwóch ciągach znaków."

msgid ""
"pages.OtherComparisonOperators.steps.introducing_less_than.requirements"
msgstr "Uruchom dowolny kod w powłoce używający albo `<` albo `>` na dwóch liczbach."