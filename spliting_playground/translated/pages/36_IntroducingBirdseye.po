msgid "pages.IntroducingBirdseye.steps.birdseye_loop_example.text"
msgstr ""
"Inne narzędzia pokazują, jak kod wykonuje się linia po linii oraz jakie są wartości zmiennych, `birdseye` pokazuje wartość każdego wyrażenia w programie. Pozwala to zobaczyć, jak skomplikowane wyrażenie jest rozbijane na mniejsze podwyrażenia\n"
"i jakie są ich wartości.\n"
"\n"
"Najedź kursorem na różne wyrażenia w ramkach w ostatniej linii programu.\n"
"Gdy każda ramka jest podświetlona, wartość zostaje pokazana na dole ekranu. Po kliknięciu na ramkę zostaje ona przymocowana do panelu, dzięki czemu możesz zobaczyć kilka wartości wyrażeń na raz i swobodnie poruszać kursorem.\n"
"\n"
"W tym przypadku `birdseye` pokazuje, że wyrażenie:\n"
"\n"
"__code0__\n"
"\n"
"jest rozbijane na\n"
"\n"
"__code1__\n"
"\n"
"a nie na\n"
"\n"
"__code2__\n"
"\n"
"Innymi słowy, Python przestrzega zwykłej kolejności operacji w matematyce, a nie po prostu oceniając od lewej do prawej.\n"
"\n"
"Zauważ, że istnieją wyrażenia, które `birdseye` nie umieszcza w ramkach. W tym przypadku `2`, `3`, `4`, `5` i `print` to także wyrażenia, ale ich wartości są oczywiste i umieszczenie ich w ramkach tylko by je zaśmiecało.\n"
"\n"
"Oto bardziej skomplikowany przykład do wypróbowania:\n"
"\n"
"    __copyable__\n"
"__code3__"

msgid "pages.IntroducingBirdseye.steps.final_text.text"
msgstr ""
"Zauważ, że:\n"
"\n"
"1. Obok pętli for jest para strzałek. Kliknij je, aby nawigować przez pętlę w czasie i zobaczyć, co działo się w różnych iteracjach.\n"
"2. Kod, który nie został wykonany w iteracji z powodu `if`, jest wyszarzony. Wyrażenia w środku nie mają wartości, ponieważ nie zostały ocenione.\n"
"3. Wartości zapisane dla wyrażeń `vowels` i `consonants` zależą od tego, na którą ramkę patrzysz. W linijkach po pętli zawierają wszystkie litery, ale wewnątrz pętli mają tylko niektóre, i dokładnie ile, zależy od tego, która iteracja jest aktualnie wyświetlana.\n"
"4. W `vowels.append(letter)`, widzisz, jakie były wartości tych zmiennych *w tym momencie*. Oznacza to, że `letter` zaraz zostanie dołączony do `vowels`, ale to jeszcze się nie stało, więc `vowels` nie zawiera jeszcze `letter`."

msgid "pages.IntroducingBirdseye.steps.first_birdseye_example.text"
msgstr ""
"Widziałeś już `snoop` i Python Tutor. futurecoder jest wyposażony jeszcze w jedno narzędzie do analizowania programów w trakcie ich działania, nazywane `birdseye`.\n"
"\n"
"Oto przykładowy program do uruchomienia. Skopiuj go do edytora i kliknij przycisk `birdseye`. Spowoduje to otwarcie nowej karty przeglądarki z wizualizacją.\n"
"\n"
"    __copyable__\n"
"__code0__"

msgid "pages.IntroducingBirdseye.title"
msgstr "Zrozumienie Programów przy Pomocy `birdseye`"
