msgid "pages.BuildingUpStrings.steps.empty_string.text"
msgstr ""
"Ostatni znak w `name` jest dodawany do `line` tylko na końcu pętli, po tym jak `print(line)` już zostało wykonane po raz ostatni. Więc ten znak i pełna `name` nigdy nie zostają wydrukowane na dole trójkąta. Jeśli jesteś zdezorientowany, spróbuj umieścić `print(line)` zarówno przed, jak i po `line = line + char`.\n"
"\n"
"Zróbmy coś z tymi znakami `-` na wyjściu. Możesz już być w stanie zgadnąć jak.\n"
"\n"
"*Pusty łańcuch* to łańcuch nie zawierający w ogóle znaków.\n"
"Jest zapisany jako para cytatów otaczających nic: `''`.\n"
"To jest jak zero łańcuchów.\n"
"Dodanie go do innego łańcucha daje ci po prostu niezmieniony drugi łańcuch,\n"
"tak samo jak `0 + 5` to po prostu `5`.\n"
"\n"
"Spróbuj tego w konsoli:\n"
"\n"
"__program_indented__"

msgid "pages.BuildingUpStrings.steps.final_text.text"
msgstr ""
"Czyż to nie jest piękne?\n"
"\n"
"Wzór rozpoczęcia od czegoś pustego i budowania tego w pętli `for` jest *bardzo* częsty\n"
"i będziesz miał z tym dużo praktyki. Niektóre początkowe puste wartości to\n"
"`''`, `0` i `[]` - pusta lista, o której wkrótce się dowiesz."

msgid ""
"pages.BuildingUpStrings.steps.hello_plus_equals.output_prediction_choices.0"
msgstr ""
"Hello\n"
"Hello"

msgid ""
"pages.BuildingUpStrings.steps.hello_plus_equals.output_prediction_choices.1"
msgstr ""
"Hello\n"
"Hello!"

msgid ""
"pages.BuildingUpStrings.steps.hello_plus_equals.output_prediction_choices.2"
msgstr ""
"Hello!\n"
"Hello!"

msgid "pages.BuildingUpStrings.steps.hello_plus_equals.text"
msgstr ""
"Zanim przyjrzymy się kilku pętlom, musimy szybko poznać kolejne pojęcie. Spójrz na ten program:\n"
"\n"
"__program_indented__\n"
"\n"
"Co myślisz, robi linia `hello = hello + '!'`? Uruchom program, aby się dowiedzieć."

msgid ""
"pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.0"
msgstr ""
"-\n"
"W\n"
"-\n"
"o\n"
"-\n"
"r\n"
"-\n"
"l\n"
"-\n"
"d"

msgid ""
"pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.1"
msgstr ""
"-W\n"
"-o\n"
"-r\n"
"-l\n"
"-d"

msgid ""
"pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.2"
msgstr "-World"

msgid ""
"pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.3"
msgstr "-W-o-r-l-d"

msgid ""
"pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.4"
msgstr ""
"-W\n"
"-Wo\n"
"-Wor\n"
"-Worl\n"
"-World"

msgid ""
"pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.5"
msgstr ""
"-World\n"
"-Worl\n"
"-Wor\n"
"-Wo\n"
"-W"

msgid ""
"pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.6"
msgstr ""
"-World\n"
"-World\n"
"-World\n"
"-World\n"
"-World"

msgid ""
"pages.BuildingUpStrings.steps.name_triangle.output_prediction_choices.7"
msgstr ""
"-World\n"
"--World\n"
"---World\n"
"----World\n"
"-----World"

msgid "pages.BuildingUpStrings.steps.name_triangle.text"
msgstr ""
"Pythonowi nie przeszkadza, że `hello` znajduje się zarówno po lewej, jak i prawej stronie `=`, po prostu robi to, co zawsze by zrobił, gdyby zmienne były inne: oblicza `hello + '!'`, co w tym przypadku jest `'Hello' + '!'`, co daje `'Hello!'`, i to staje się nową wartością `hello`. Jeśli to pomoże, możesz myśleć o tej linii jako podzielonej na dwa kroki:\n"
"\n"
"__code0__\n"
"\n"
"lub:\n"
"\n"
"__code1__\n"
"\n"
"To jest bardzo użyteczne w pętli. Wypróbuj ten program:\n"
"\n"
"__program_indented__"

msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.hints.0.text"
msgstr ""
"Najpierw upewnij się, że nie pracujesz na uszkodzonej wersji poprzedniego "
"programu na tej stronie."

msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.hints.1.text"
msgstr "Czyli `line = line + char` powinno być przed `print(line)`."

msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.hints.2.text"
msgstr "Poza tym musisz dokonać tylko jednej ***malutkiej*** zmiany."

msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.hints.3.text"
msgstr "Chcemy pozbyć się `-`. Więc po prostu to zrób. Dosłownie."

msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.hints.4.text"
msgstr "Użyj pustego łańcucha!"

msgid "pages.BuildingUpStrings.steps.name_triangle_empty_string.text"
msgstr ""
"Nie myl pustego łańcucha z `' '`, który jest niepustym łańcuchem zawierającym jeden znak: spację.\n"
"\n"
"Teraz napraw oryginalny program, aby pozbyć się tych linii w wyjściu, tak aby\n"
"dla `name = 'World'` wydrukowało:\n"
"\n"
"    __no_auto_translate__\n"
"    W\n"
"    Wo\n"
"    Wor\n"
"    Worl\n"
"    World"

msgid ""
"pages.BuildingUpStrings.steps.name_triangle_missing_last_line.output_prediction_choices.0"
msgstr ""
"-W\n"
"-Wo\n"
"-Wor\n"
"-Worl\n"
"-World"

msgid ""
"pages.BuildingUpStrings.steps.name_triangle_missing_last_line.output_prediction_choices.1"
msgstr ""
"-Wo\n"
"-Wor\n"
"-Worl\n"
"-World"

msgid ""
"pages.BuildingUpStrings.steps.name_triangle_missing_last_line.output_prediction_choices.2"
msgstr ""
"-\n"
"-W\n"
"-Wo\n"
"-Wor\n"
"-Worl"

msgid "pages.BuildingUpStrings.steps.name_triangle_missing_last_line.text"
msgstr ""
"Poświęć czas, aby całkowicie zrozumieć ten program. Robi coś w rodzaju:\n"
"\n"
"    line = '-'\n"
"\n"
"    char = 'W'\n"
"    line = line + char\n"
"         = '-' + 'W'\n"
"         = '-W'\n"
"    print('-W')\n"
"\n"
"    char = 'o'\n"
"    line = line + char\n"
"         = '-W' + 'o'\n"
"         = '-Wo'\n"
"    print('-Wo')\n"
"\n"
"    char = 'r'\n"
"    line = line + char\n"
"         = '-Wo' + 'r'\n"
"         = '-Wor'\n"
"    print('-Wor')\n"
"\n"
"    ...\n"
"\n"
"Szczegóły są ważne. Co się stanie, jeśli zamienisz ostatnie dwie linie i uruchomisz ten program zamiast tego?\n"
"\n"
"__program_indented__"

msgid "pages.BuildingUpStrings.title"
msgstr "Budowanie łańcuchów tekstowych"
