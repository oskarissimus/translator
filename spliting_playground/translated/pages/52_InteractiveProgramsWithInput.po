#
msgid ""
msgstr ""

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.0.text"
msgstr "`input()` always returns a string."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.1.text"
msgstr "A string that looks like a number is still a string, not a number."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.2.text"
msgstr "In `super_secret_number = 7`, `7` is a number, not a string."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.3.text"
msgstr "That makes `super_secret_number` also a number."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.4.text"
msgstr "A string cannot equal a number."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.5.text"
msgstr ""
"To check that two values are equal, make sure they're the same type first."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.6.text"
msgstr ""
"So to compare a number and a string, first convert the number to a string or"
" convert the string to a number."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.7.text"
msgstr ""
"You learned how to convert between strings and numbers in the previous page."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.8.text"
msgstr ""
"Use `int()` to convert to an integer (whole number) or `str()` to convert to"
" a string."

msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.text"
msgstr ""
"Whatever you typed in (not including pressing Enter at the end) is returned from the `input()` function as a string.\n"
"\n"
"It's essential to understand that `input()` ***always returns a string***, no matter what the user typed in.\n"
"It's up to you to convert that string to the type you need.\n"
"Forgetting this detail is a common source of confusing bugs.\n"
"\n"
"For example, this program looks fine at a glance, but if you try it out you'll see that it doesn't actually work:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"Fix the program so that when the user inputs the value of `super_secret_number` (`7` in this example)\n"
"the program prints `Amazing! Are you psychic?` as expected.\n"
"It should work when `super_secret_number` is any whole number (`int`)."

msgid "pages.InteractiveProgramsWithInput.steps.final_text.text"
msgstr ""
"Perfect!\n"
"\n"
"There's two main fixes that would work here. You can convert the input to a number:\n"
"\n"
"__code0__\n"
"\n"
"or convert the correct answer to a string:\n"
"\n"
"__code1__\n"
"\n"
"An important difference between these two approaches is that the first approach will raise an error\n"
"if the user types something that isn't a number, which may or may not be what you want."

msgid "pages.InteractiveProgramsWithInput.steps.first_input.text"
msgstr ""
"The programs we have written so far are not interactive.\n"
"To make our interactive Tic-tac-toe game, we will need a method of receiving input from the players.\n"
"Python allows us to do that with the built-in `input` function. Run this program:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"When `name = input()` runs, the program actually stops and waits for you to type in the shell and press Enter,\n"
"so you will need to do that for it to complete."

msgid "pages.InteractiveProgramsWithInput.title"
msgstr "Interactive Programs with `input()`"
