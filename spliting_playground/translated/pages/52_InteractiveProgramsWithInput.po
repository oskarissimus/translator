msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.0.text"
msgstr "`input()` zawsze zwraca string."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.1.text"
msgstr "String wyglądający jak liczba wciąż jest stringiem, a nie liczbą."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.2.text"
msgstr "W `super_secret_number = 7`, `7` to liczba, a nie string."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.3.text"
msgstr "To sprawia, że `super_secret_number` też jest liczbą."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.4.text"
msgstr "String nie może być równy liczbie."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.5.text"
msgstr ""
"Aby sprawdzić, czy dwie wartości są równe, upewnij się najpierw, że są tego "
"samego typu."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.6.text"
msgstr ""
"Więc aby porównać liczbę i string, najpierw przekonwertuj liczbę na string "
"lub przekonwertuj string na liczbę."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.7.text"
msgstr ""
"Nauczyłeś się, jak przekształcać pomiędzy stringami a liczbami na "
"poprzedniej stronie."

msgid ""
"pages.InteractiveProgramsWithInput.steps.convert_input_to_int.hints.8.text"
msgstr ""
"Użyj `int()` do konwersji na liczbę całkowitą (naturalną) lub `str()` do "
"konwersji na string."

msgid "pages.InteractiveProgramsWithInput.steps.convert_input_to_int.text"
msgstr ""
"Cokolwiek wpisałeś (nie licząc wciśnięcia Entera na końcu) jest zwracane z funkcji `input()` jako string.\n"
"\n"
"Zasadnicze jest zrozumienie, że `input()` ***zawsze zwraca string***, bez względu na to, co użytkownik wpisał.\n"
"To do Ciebie należy konwersja tego stringa na typ, którego potrzebujesz.\n"
"Zapominanie o tym szczególe jest częstym źródłem zamieszania w błędach.\n"
"\n"
"Na przykład, ten program na pierwszy rzut oka wygląda dobrze, ale jeśli go wypróbujesz, zobaczysz, że właściwie nie działa:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"Popraw program tak, aby gdy użytkownik wprowadzi wartość `super_secret_number` (`7` w tym przykładzie)\n"
"program wydrukował `Niesamowite! Czy masz zdolności jasnowidzenia?` jak się spodziewano.\n"
"Powinien działać, gdy `super_secret_number` jest dowolną liczbą całkowitą (`int`)."

msgid "pages.InteractiveProgramsWithInput.steps.final_text.text"
msgstr ""
"Świetnie!\n"
"\n"
"Jest dwie główne poprawki, które by tu zadziałały. Możesz przekonwertować wejście na liczbę:\n"
"\n"
"__code0__\n"
"\n"
"lub przekonwertować poprawną odpowiedź na string:\n"
"\n"
"__code1__\n"
"\n"
"Ważną różnicą między tymi dwoma podejściami jest to, że pierwsze podejście spowoduje wyświetlenie błędu,\n"
"jeśli użytkownik wpisze coś, co nie jest liczbą, co może być, albo i nie, tym, czego chcesz."

msgid "pages.InteractiveProgramsWithInput.steps.first_input.text"
msgstr ""
"Programy, które dotychczas napisaliśmy, nie są interaktywne.\n"
"Aby stworzyć naszą interaktywną grę w kółko i krzyżyk, będziemy potrzebować metody odbierania danych wejściowych od graczy.\n"
"Python pozwala na to za pomocą wbudowanej funkcji `input`. Uruchom ten program:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"Gdy uruchomisz `name = input()`, program faktycznie zatrzymuje się i czeka, aż coś wpiszesz w powłoce i naciśniesz Enter,\n"
"więc musisz to zrobić, aby mógł się zakończyć."

msgid "pages.InteractiveProgramsWithInput.title"
msgstr "Interaktywne programy z `input()`"
