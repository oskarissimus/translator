#
msgid ""
msgstr ""

msgid "pages.ReturningValuesFromFunctions.steps.final_text.text"
msgstr ""
"Brawo! Oto dwie możliwe rozwiązania:\n"
"\n"
"__code0__"

msgid "pages.ReturningValuesFromFunctions.steps.first_return.text"
msgstr ""
"Funkcje mogą być szczególnie użyteczne, kiedy *zwracają* wartości, zamiast je tylko wyświetlać. Wypróbuj ten przykład:\n"
"\n"
"__program_indented__"

msgid "pages.ReturningValuesFromFunctions.steps.losing_return_value.text"
msgstr ""
"Tu przekazaliśmy `number` (które ma wartość `5`) jako argument `x` do funkcji `double`, a funkcja `double` *zwróciła*\n"
"`x * 2`, to jest `5 * 2`, to jest `10`, co stało się wartością zmiennej `twice`. Specjalne słowo kluczowe `return` wewnątrz\n"
"`double` sprawia, że `double(number)` jest wyrażeniem o wartości - konkretnie wartości, która została zwrócona.\n"
"To trochę tak, jakby `twice = double(number)` było równoważne `twice = number * 2`, chociaż to nie jest\n"
"dokładnie to, co się dzieje.\n"
"\n"
"Zauważ, że `double(number)` *nie zmieniło `number`*. Na końcu `number` wciąż jest `5`. Raczej, `double(number)`\n"
"zwróciło nową wartość. Istotne jest, aby program wykorzystał tę zwróconą wartość, w tym przypadku przechowując ją\n"
"w zmiennej. Natychmiastowe wydrukowanie jej z `print(double(number))` również działa. Z drugiej strony, \n"
"spróbuj to:\n"
"\n"
"__program_indented__"

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.0.text"
msgstr "Aby pomnożyć przez 4, pomnóż przez 2 dwa razy."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.1.text"
msgstr "To oznacza, że musisz wywołać `double` dwa razy."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.10.text"
msgstr "Spojrzyj na definicję funkcji `double` jako przykład."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.11.text"
msgstr ""
"Upewnij się, że nie wywołujesz funkcji `quadruple` w ciele funkcji "
"`quadruple`. Sprawdź swoje wcięcia."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.2.text"
msgstr ""
"Upewnij się, że używasz wartości zwracanej przez `double` za każdym razem."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.3.text"
msgstr "Upewnij się, że posiadasz wszystkie elementy definicji funkcji."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.4.text"
msgstr "To obejmuje `def`, `()`, oraz `:`."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.5.text"
msgstr "Upewnij się, że twoja funkcja jest nazwana `quadruple`."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.6.text"
msgstr ""
"Upewnij się, że przyjmuje jeden parametr o nazwie `x` pomiędzy nawiasami "
"`()`."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.7.text"
msgstr "Użyj parametru w ciele funkcji."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.8.text"
msgstr "Upewnij się, że ciało jest wcięte."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.hints.9.text"
msgstr "Upewnij się, że coś zwracasz na końcu."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.messages.used_multiply.text"
msgstr ""
"Nie możesz używać `*`, `+`, ani nawet żadnych liczb wewnątrz `quadruple`.\n"
"Musisz rozwiązać problem wywołując funkcję `double`."

msgid ""
"pages.ReturningValuesFromFunctions.steps.quadruple_exercise.requirements"
msgstr ""
"Napisz program, który definiuje funkcję o nazwie `quadruple` zgodnie z "
"powyższym opisem."

msgid "pages.ReturningValuesFromFunctions.steps.quadruple_exercise.text"
msgstr ""
"Tu `double(number)` nadal zwróciło `10`, ale nie wykorzystaliśmy tego, więc zostało to utracone. `number` jest nadal `5`.\n"
"\n"
"Napisz funkcję `quadruple`, która bierze jeden argument `x` i zwraca ten argument pomnożony przez 4.\n"
"Możesz użyć wyłącznie funkcji `double` - bezpośrednio w ciele funkcji `quadruple` zakazane są liczby lub mnożenie."

msgid "pages.ReturningValuesFromFunctions.title"
msgstr "Zwracanie Wartości z Funkcji"
