#
msgid ""
msgstr ""

msgid "pages.IfAndElse.steps.first_if_else.text"
msgstr ""
"An `if` statement can optionally have an `else` part. Run this example:\n"
"\n"
"__program_indented__"

msgid "pages.IfAndElse.steps.first_if_else_false.text"
msgstr "Now change the first line to `condition = False` and run it again."

msgid "pages.IfAndElse.steps.if_upper_else_lower.text"
msgstr ""
"Think of `else` as saying 'or else' or 'otherwise'. It means that if the condition in the `if`\n"
"is false, then the body of the `else` will run instead. Whether the condition is true or false,\n"
"exactly one of the two bodies will run.\n"
"\n"
"Here's a more interesting example to run:\n"
"\n"
"__program_indented__"

msgid "pages.IfAndElse.steps.if_upper_else_lower_false.text"
msgstr ""
"`sentence.upper()` is a new kind of expression we haven't encountered yet. What's going on here is that `sentence` is a string and strings have various *methods* that let you conveniently calculate new values from them, including `upper` and `lower`. The names refer to uppercase (capital letters) and lowercase (small letters). `'Hello World'.upper()` evaluates to `'HELLO WORLD'`. It doesn't change the contents of `sentence` though, so you have to assign the new value again with `sentence = sentence.upper()`.\n"
"\n"
"Now change `excited` to `False` and run it again."

msgid "pages.IfAndElse.steps.undefined_char.text"
msgstr ""
"Here's a broken program:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"Can you see the problem? If you run it, everything seems fine. What could go wrong?\n"
"\n"
"Spoilers below! Have you figured it out?\n"
"\n"
"What happens if you change `excited` to `False`?"

msgid "pages.IfAndElse.steps.else_full_stop.text"
msgstr ""
"If `excited` is true then `char` is defined and everything runs fine. But otherwise\n"
"`char` never gets assigned a value, so trying to use it in `sentence += char` fails.\n"
"\n"
"Fix this by adding an `else` clause to the `if` so that if `excited` is false, a full stop (`.`)\n"
"is added to the end of the sentence instead of an exclamation mark (`!`)."

msgid "pages.IfAndElse.steps.capitalise.text"
msgstr ""
"Time for a challenge!\n"
"\n"
"Write a program which, given a string `sentence`, prints a modified version with\n"
"the same letters, where the first letter is capitalised and the rest are lowercase.\n"
"For example, the output should be `Hello world` whether the input `sentence = 'hello world'`\n"
"or `'HELLO WORLD'`."

msgid "pages.IfAndElse.steps.spongebob.text"
msgstr ""
"Excellent!!!\n"
"\n"
"One more exercise, and then you can relax.\n"
"\n"
"Write a program which prints `sentence` mockingly, e.g:\n"
"\n"
"    OnE MoRe eXeRcIsE, aNd tHeN YoU CaN ReLaX.\n"
"\n"
"Every second character should be lowercased, the rest should be uppercase."

msgid "pages.IfAndElse.steps.final_text.text"
msgstr ""
"Perfect! Take a moment to be proud of what you've achieved. Can you feel "
"your brain growing?"

msgid "pages.IfAndElse.steps.capitalise.hints.0.text"
msgstr ""
"You've learned all the tools you need for this. I believe in you! Look at "
"previous programs for inspiration."

msgid "pages.IfAndElse.steps.capitalise.hints.1.text"
msgstr ""
"You will need a loop to build up the new sentence character by character."

msgid "pages.IfAndElse.steps.capitalise.hints.2.text"
msgstr ""
"You will need an `if/else` to choose whether to add an uppercase or "
"lowercase character."

msgid "pages.IfAndElse.steps.capitalise.hints.3.text"
msgstr ""
"Your `if/else` needs to execute different bodies depending on which "
"iteration of the loop it's in."

msgid "pages.IfAndElse.steps.capitalise.hints.4.text"
msgstr ""
"That means that your `if` condition needs to be a variable that changes "
"inside the loop."

msgid "pages.IfAndElse.steps.capitalise.hints.5.text"
msgstr ""
"In the first iteration you need an uppercase letter. In the following "
"iterations you need a lowercase letter."

msgid "pages.IfAndElse.steps.spongebob.hints.0.text"
msgstr ""
"This is similar to the previous exercise. The difference is when and where "
"you set the condition variable."

msgid "pages.IfAndElse.steps.spongebob.hints.1.text"
msgstr ""
"You will need to have a boolean variable which changes with every iteration."

msgid "pages.IfAndElse.steps.spongebob.hints.2.text"
msgstr ""
"First write a small program which takes a boolean variable and flips it, "
"i.e. if the variable is `True` it becomes `False` and if it starts out "
"`False` it's changed to `True`. No loops, just an `if/else`."

msgid "pages.IfAndElse.steps.spongebob.hints.3.text"
msgstr ""
"You will need to use the variable in the `if` condition and also assign to "
"the same variable in the body."

msgid "pages.IfAndElse.steps.spongebob.hints.4.text"
msgstr ""
"Combine that flipping `if/else` with the one that chooses an uppercase or "
"lowercase character."

msgid "pages.IfAndElse.steps.undefined_char.output_prediction_choices.0"
msgstr "Hello World"

msgid "pages.IfAndElse.steps.undefined_char.output_prediction_choices.1"
msgstr "Hello World!"

msgid "pages.IfAndElse.title"
msgstr "`if` and `else`"

msgid "pages.IfAndElse.steps.else_full_stop.hints.0.text"
msgstr "Don't change anything that's already there, just add a bit more code."

msgid "pages.IfAndElse.steps.else_full_stop.hints.1.text"
msgstr ""
"`else` needs to come immediately after the `if` body, with nothing in "
"between."

msgid "pages.IfAndElse.steps.else_full_stop.hints.2.text"
msgstr ""
"`sentence += char` needs to run whether `excited` is `True` or `False`."

msgid "pages.IfAndElse.steps.else_full_stop.hints.3.text"
msgstr ""
"You *could* have a copy of `sentence += char` in both the `if` and `else` "
"blocks, but there's a better way."

msgid "pages.IfAndElse.steps.else_full_stop.hints.4.text"
msgstr "Use `else` to assign a different value to `char`."

msgid "pages.IfAndElse.steps.else_full_stop.hints.5.text"
msgstr ""
"If `excited` is `False`, then `char` should be `'.'` instead of `'!'`."

msgid "pages.IfAndElse.steps.first_if_else_false.requirements"
msgstr ""
"Run the same program from the previous step, but replace `True` with "
"`False`, so that `condition = False`."

msgid "pages.IfAndElse.steps.if_upper_else_lower_false.requirements"
msgstr ""
"Run the same program from the previous step, but replace `True` with "
"`False`, so that `excited = False`."

msgid "pages.IfAndElse.steps.undefined_char.requirements"
msgstr ""
"Copy the program above. Run it as is if you want. Then change `excited = "
"True` to `excited = False` and run it again."
