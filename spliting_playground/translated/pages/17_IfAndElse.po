msgid "pages.IfAndElse.steps.capitalise.hints.0.text"
msgstr ""
"Nauczyłeś się wszystkich narzędzi, których potrzebujesz. Wierzę w Ciebie! "
"Szukaj inspiracji w poprzednich programach."

msgid "pages.IfAndElse.steps.capitalise.hints.1.text"
msgstr "Będziesz potrzebować pętli, aby zbudować nowe zdanie znak po znaku."

msgid "pages.IfAndElse.steps.capitalise.hints.2.text"
msgstr ""
"Będziesz potrzebował `if/else`, aby zdecydować, czy dodać wielką literę, czy"
" małą."

msgid "pages.IfAndElse.steps.capitalise.hints.3.text"
msgstr ""
"Twoje `if/else` musi wykonać różne bloki kodu w zależności od iteracji "
"pętli, w której się znajduje."

msgid "pages.IfAndElse.steps.capitalise.hints.4.text"
msgstr ""
"To oznacza, że warunek Twojego `if` musi być zmienną, która zmienia się "
"wewnątrz pętli."

msgid "pages.IfAndElse.steps.capitalise.hints.5.text"
msgstr ""
"W pierwszej iteracji potrzebujesz wielkiej litery. W kolejnych iteracjach "
"potrzebujesz małej litery."

msgid "pages.IfAndElse.steps.capitalise.text"
msgstr ""
"Czas na wyzwanie!\n"
"\n"
"Napisz program, który, mając dany ciąg `sentence`, wydrukuje zmodyfikowaną wersję z\n"
"tymi samymi literami, gdzie pierwsza litera jest wielka, a reszta małe.\n"
"Na przykład, wynik powinien być `Hello world`, niezależnie czy wejście `sentence = 'hello world'`\n"
"czy `'HELLO WORLD'`."

msgid "pages.IfAndElse.steps.else_full_stop.hints.0.text"
msgstr ""
"Nie zmieniaj niczego, co jest już tam, dodaj tylko trochę więcej kodu."

msgid "pages.IfAndElse.steps.else_full_stop.hints.1.text"
msgstr ""
"`else` musi znajdować się bezpośrednio po ciele `if`, z niczym pomiędzy."

msgid "pages.IfAndElse.steps.else_full_stop.hints.2.text"
msgstr ""
"`sentence += char` musi zostać wykonane zarówno, gdy `excited` jest `True`, "
"jak i `False`."

msgid "pages.IfAndElse.steps.else_full_stop.hints.3.text"
msgstr ""
"Mógłbyś mieć kopię `sentence += char` zarówno w bloku `if`, jak i `else`, "
"ale jest lepszy sposób."

msgid "pages.IfAndElse.steps.else_full_stop.hints.4.text"
msgstr "Użyj `else`, aby przypisać inną wartość dla `char`."

msgid "pages.IfAndElse.steps.else_full_stop.hints.5.text"
msgstr ""
"Jeśli `excited` jest `False`, wtedy `char` powinien być `'.'` zamiast `'!'`."

msgid "pages.IfAndElse.steps.else_full_stop.text"
msgstr ""
"Jeśli `excited` jest prawdziwe, to `char` zostało zdefiniowane i wszystko działa poprawnie. W przeciwnym razie\n"
"`char` nigdy nie zostaje przypisane wartość, więc próba użycia go w `sentence += char` kończy się niepowodzeniem.\n"
"\n"
"Napraw to, dodając klauzulę `else` do `if`, tak aby jeśłi `excited` jest nieprawdziwe, kropka (`.`)\n"
"została dodana na końcu zdania zamiast wykrzyknika (`!`)."

msgid "pages.IfAndElse.steps.final_text.text"
msgstr ""
"Doskonale! Zatrzymaj się na chwilę i ciesz się z tego, co osiągnąłeś. Czy "
"czujesz, że Twój mózg rośnie?"

msgid "pages.IfAndElse.steps.first_if_else.text"
msgstr ""
"Instrukcja `if` może opcjonalnie mieć część `else`. Uruchom ten przykład:\n"
"\n"
"__program_indented__"

msgid "pages.IfAndElse.steps.first_if_else_false.requirements"
msgstr ""
"Uruchom ten sam program z poprzedniego kroku, ale zastąp `True` na `False`, "
"więc `condition = False`."

msgid "pages.IfAndElse.steps.first_if_else_false.text"
msgstr ""
"Teraz zmień pierwszą linię na `condition = False` i uruchom to ponownie."

msgid "pages.IfAndElse.steps.if_upper_else_lower.text"
msgstr ""
"Pomyśl o `else` jako o sformułowaniu 'w przeciwnym razie'. Oznacza to, że jeśli warunek w `if` jest fałszywy, to zamiast tego zostanie wykonany kod w `else`. Bez względu na to, czy warunek jest prawdziwy czy fałszywy, dokładnie jeden z dwóch bloków zostanie wykonany.\n"
"\n"
"Oto bardziej interesujący przykład do uruchomienia:\n"
"\n"
"__program_indented__"

msgid "pages.IfAndElse.steps.if_upper_else_lower_false.requirements"
msgstr ""
"Uruchom ten sam program z poprzedniego kroku, ale zastąp `True` na `False`, "
"więc `excited = False`."

msgid "pages.IfAndElse.steps.if_upper_else_lower_false.text"
msgstr ""
"`sentence.upper()` to nowy rodzaj wyrażenia, z którym się jeszcze nie spotkaliśmy. Chodzi o to, że `sentence` to ciąg znaków i ciągi znaków mają różne *metody*, które pozwalają wygodnie obliczać nowe wartości z nich, w tym `upper` i `lower`. Nazwy odnoszą się do wielkich liter (uppercase) i małych liter (lowercase). `'Hello World'.upper()` zwraca `'HELLO WORLD'`. Nie zmienia to jednak zawartości `sentence`, więc musisz przypisać nową wartość ponownie za pomocą `sentence = sentence.upper()`.\n"
"\n"
"Teraz zmień `excited` na `False` i uruchom to ponownie."

msgid "pages.IfAndElse.steps.spongebob.hints.0.text"
msgstr ""
"To podobne do poprzedniego ćwiczenia. Różnica polega na tym, kiedy i gdzie "
"ustawiasz zmienną warunkową."

msgid "pages.IfAndElse.steps.spongebob.hints.1.text"
msgstr ""
"Będziesz potrzebować zmiennej typu boolean, która zmienia się z każdą "
"iteracją."

msgid "pages.IfAndElse.steps.spongebob.hints.2.text"
msgstr ""
"Najpierw napisz mały program, który bierze zmienną typu boolean i odwraca "
"ją, np. jeśli zmienna jest `True`, staje się `False` i odwrotnie, jeśli "
"zaczyna sie od `False`, zmienia się na `True`. Bez pętli, tylko z `if/else`."

msgid "pages.IfAndElse.steps.spongebob.hints.3.text"
msgstr ""
"Będziesz musiał użyć tej zmiennej w warunku `if` oraz przypisać do tej samej"
" zmiennej w ciele."

msgid "pages.IfAndElse.steps.spongebob.hints.4.text"
msgstr ""
"Połącz to odwracające `if/else` z tym, które wybiera wielką lub małą literę."

msgid "pages.IfAndElse.steps.spongebob.text"
msgstr ""
"Wspaniale!!!\n"
"\n"
"Jeszcze jedno ćwiczenie, a potem możesz się zrelaksować.\n"
"\n"
"Napisz program, który drukuje `sentence` w sposób kpiący, np.:\n"
"\n"
"    OnE MoRe eXeRcIsE, aNd tHeN YoU CaN ReLaX.\n"
"\n"
"Co drugi znak powinien być małą literą, reszta wielkimi literami."

msgid "pages.IfAndElse.steps.undefined_char.output_prediction_choices.0"
msgstr "Hello World"

msgid "pages.IfAndElse.steps.undefined_char.output_prediction_choices.1"
msgstr "Hello World!"

msgid "pages.IfAndElse.steps.undefined_char.requirements"
msgstr ""
"Skopiuj program powyżej. Uruchom go tak, jak jest jeśli chcesz. Następnie "
"zmień `excited = True` na `excited = False` i uruchom to ponownie."

msgid "pages.IfAndElse.steps.undefined_char.text"
msgstr ""
"Oto zepsuty program:\n"
"\n"
"    __copyable__\n"
"__code0__\n"
"\n"
"Czy widzisz problem? Jeśli uruchomisz go, wszystko wydaje się być w porządku. Co może pójść nie tak?\n"
"\n"
"Odpowiedzi poniżej! Czy już to rozgryzłeś?\n"
"\n"
"Co się dzieje, jeśli zmienisz `excited` na `False`?"

msgid "pages.IfAndElse.title"
msgstr "`if` i `else`"
